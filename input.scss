// $gray-100: #f8f9fa;
// $gray-200: #e9ecef;
// $gray-300: #dee2e6;
// $gray-400: #ced4da;
// $gray-500: #adb5bd;
// $gray-600: #6c757d;
// $gray-700: #495057;
// $gray-800: #343a40;
// $gray-900: #212529;

$white: white;
$black: black;
$gray: #adb5bd;
$blue: #0d6efd;
$indigo: #6610f2;
$purple: #6f42c1;
$pink: #d63384;
$red: #dc3545;
$orange: #fd7e14;
$yellow: #ffc107;
$green: #198754;
$teal: #20c997;
$cyan: #0dcaf0;

$colors: (
    "blue": $blue,
    "indigo": $indigo,
    "purple": $purple,
    "pink": $pink,
    "red": $red,
    "orange": $orange,
    "yellow": $yellow,
    "green": $green,
    "teal": $teal,
    "cyan": $cyan,
    "gray": $gray,
    "white": $white,
    "black": $black
);

// Function to generate tints and shades with clamping
@function tint-color($color, $amount) {
    @return mix($white, $color, max(0%, min($amount, 100%)));
}

@function shade-color($color, $amount) {
    @return mix($black, $color, max(0%, min($amount, 100%)));
}

$generated-colors: (
);

// Generate color classes
@each $name, $color in $colors {
    @for $i from 1 through 9 {
        $tint: tint-color($color, 100% - ($i * 20%));
        $shade: shade-color($color, ($i * 20%) - 100%);

        .#{$name}-#{$i}00 {
            color: if($i <5, $black, $white);
            background-color: if($i <=5, $tint, $shade);
        }

        .#{$name}-#{$i}00:hover {
            background-color: $white;
            color: if($i <=5, $tint, $shade);
        }

        // Store the generated color in the map
        $generated-colors: map-merge($generated-colors,
                ("#{$name}-#{$i}00": if($i <=5, $tint, $shade)));
    }

    .swatch-#{$name} {
        color: $white;
        background-color: $color;
    }
}

// Primary colors map
$primary-colors: (
    "primary": map-get($generated-colors, "blue-500"),
    "secondary": map-get($generated-colors, "gray-600"),
    "success": map-get($generated-colors, "green-500"),
    "info": map-get($generated-colors, "cyan-500"),
    "warning": map-get($generated-colors, "yellow-500"),
    "danger": map-get($generated-colors, "red-500"),
    "light": map-get($generated-colors, "gray-100"),
    "dark": map-get($generated-colors, "gray-900")
);

// Generate color utility classes
@each $name, $color in $primary-colors {
    .#{$name}-color {
        color: $color;
    }
}